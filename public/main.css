/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.detail__button__icon, .detail__media__image, .collections__content, .collections__gallery__media__image, .collections__gallery, .collections__wrapper, .about__highlight__media__image, .about__gallery__media__image, .about__content__media__image, .home__link__icon, .home__gallery, .navigation, .preloader, .content, .detail, .collections, .about, .home {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.detail, .home, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .collections__titles__label, .home__titles__label {
  font-size: 1.2rem;
}

.detail__information__highlight__text, .detail__information__highlights, .collections__article__description {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}

.detail__button, .home__link, .preloader__number {
  font-size: 1.4rem;
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2rem;
}

.detail__information__link {
  font-family: "George X";
  font-size: 3rem;
}

.preloader__text span span {
  font-family: "George X";
  font-size: 5.3rem;
  line-height: 1;
}

.collections__article__title {
  font-family: "George X";
  font-size: 6rem;
}

.about__title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}

.about__highlight__title, .collections__titles__title, .home__titles__title {
  font-family: "George X";
  font-size: 20rem;
}

.detail__information__title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}

.collections__titles, .home__titles {
  align-items: center;
  display: flex;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%) rotate(-90deg);
  top: 50%;
}

.collections__titles__label, .home__titles__label {
  text-transform: uppercase;
  text-align: center;
  transform: rotate(90deg);
}

.collections__titles__title, .home__titles__title {
  padding-top: 2rem;
}

@font-face {
  font-family: "George X";
  src: url(george_x-webfont.woff) format("woff"), url(george_x-webfont.woff2) format("woff2");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-light-webfont.woff2) format("woff2"), url(suissebpintl-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-regular-webfont.woff2) format("woff2"), url(suissebpintl-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-ultralight-webfont.woff2) format("woff2"), url(suissebpintl-ultralight-webfont.woff) format("woff");
  font-weight: 200;
  font-style: normal;
}
*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
  position: fixed;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
}

body {
  font-family: "Suisse BP";
  font-size: 16px;
  font-weight: 300;
  line-height: 1.5;
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

img {
  vertical-align: middle;
}

button {
  border: none;
  background: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

[data-animation=title] span, [data-animation=label] span, [data-animation=paragraph] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  background: #C97164;
  color: #fff;
  text-align: center;
  z-index: 4;
}

.preloader__text {
  max-width: 66rem;
  font-size: 0;
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  overflow: hidden;
  position: absolute;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  color: #fff;
  z-index: 3;
  position: fixed;
  pointer-events: none;
}

.navigation__link {
  font-size: 0;
  height: 2rem;
  left: 4rem;
  position: absolute;
  top: 4rem;
  width: 12.8rem;
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__link {
  display: block;
}

.home {
  background: #C97164;
  color: #fff;
  overflow: hidden;
  text-align: center;
}
.home:before, .home:after {
  content: "";
  height: 24rem;
  width: 100%;
  position: absolute;
  left: 0;
  z-index: 1;
}
.home:before {
  background: #c97164;
  background: -moz-linear-gradient(0deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  background: -webkit-linear-gradient(0deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  background: linear-gradient(0deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#c97164",endColorstr="#c97164",GradientType=1);
  top: 0;
}
.home:after {
  background: #c97164;
  background: -moz-linear-gradient(180deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  background: -webkit-linear-gradient(180deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  background: linear-gradient(180deg, rgba(201, 113, 100, 0) 0%, #c97164 94%, #c97164 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#c97164",endColorstr="#c97164",GradientType=1);
  bottom: 0;
}

.home__gallery {
  visibility: hidden;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  letter-spacing: 0.05;
  width: 28.8rem;
  height: 6rem;
  align-items: center;
  justify-content: center;
  display: flex;
  position: absolute;
  bottom: 5rem;
  left: 50%;
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  transform: translateX(-50%);
  z-index: 2;
}

.about {
  background: #B2B8C8;
  color: #37384C;
}

.about__title {
  text-align: center;
  margin: 0 auto;
  max-width: 126rem;
}

.about__content {
  display: flex;
  justify-content: center;
  position: relative;
  margin: 20rem 0;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}

.about__content__wrapper {
  display: flex;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}

.about__content__box {
  display: flex;
}

.about__content__label {
  width: 18rem;
  text-transform: uppercase;
}

.about__content__description {
  width: 36.2rem;
}
.about__content__description p:not(:first-child) {
  margin-top: 2.5rem;
}

.about__content__media {
  position: relative;
}
.about__content:nth-child(3) .about__content__media {
  width: 53.8rem;
  margin-left: 18rem;
  height: 88.8rem;
}
.about__content:nth-child(5) .about__content__media {
  height: 60rem;
  margin-left: 18rem;
  width: 96rem;
}
.about__content:nth-child(8) .about__content__media {
  width: 84.2rem;
  margin-right: 12rem;
  height: 57rem;
}
.about__content:nth-child(9) .about__content__media {
  height: 85.8rem;
  margin-left: 22rem;
  width: 60.8rem;
}

.about__content__media__image {
  object-fit: cover;
}

.about__gallery {
  height: 70.6rem;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
}
.about__gallery:first-child {
  margin-bottom: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  position: relative;
  height: 43.7rem;
  width: 29.2rem;
  margin: 0 4rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem auto;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}

.about__highlight__wrapper {
  height: 104rem;
  width: 144rem;
  margin: auto;
  position: relative;
}

.about__highlight__label {
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 9rem;
  transform: translateX(-50%);
  text-align: center;
  letter-spacing: 0.1rem;
  width: 9.6rem;
}

.about__highlight__title {
  padding-bottom: 2rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
}

.about__highlight__media {
  position: absolute;
  height: 76rem;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  width: 36rem;
  height: 52.8rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  right: 0;
  bottom: 0;
}

.about__highlight__media__image {
  object-fit: cover;
}

.collections {
  background: #BC978C;
  color: #F9F1E7;
}

.collections__wrapper {
  overflow: hidden;
}

.collections__gallery__wrapper {
  align-items: center;
  display: flex;
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-22.35rem, -50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  width: 44.7rem;
  height: 63.1rem;
  position: relative;
}

.collections__gallery__media__image {
  object-fit: cover;
}

.collections__article {
  position: absolute;
  left: 8rem;
  bottom: 8rem;
}

.collections__article__description {
  max-width: 44rem;
}

.detail {
  background: #BC978C;
  color: #fff;
  display: flex;
}

.detail__wrapper {
  align-items: center;
  display: flex;
}

.detail__media {
  width: 55.4rem;
  height: 78.2rem;
  position: relative;
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  padding-left: 8.2rem;
}

.detail__information__collection {
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail__information__title {
  max-width: 60rem;
}

.detail__information__content {
  padding-left: 18rem;
}

.detail__information__highlights {
  margin-top: 5rem;
}

.detail__information__highlight {
  align-items: center;
  display: flex;
}
.detail__information__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__highlight__icon {
  height: 4rem;
  width: 4rem;
  margin-right: 3.75rem;
}

.detail__information__list {
  margin-top: 4rem;
}

.detail__information__item {
  display: flex;
}
.detail__information__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__item__title {
  padding-right: 2.5rem;
  width: 10rem;
}

.detail__information__item__description {
  max-width: 44rem;
}

.detail__information__link {
  display: inline-block;
  margin-top: 3rem;
}

.detail__button {
  width: 12.4rem;
  height: 6rem;
  display: flex;
  justify-content: center;
  align-items: center;
  left: 50%;
  bottom: 5rem;
  position: absolute;
  transform: translateX(-50%);
  z-index: 2;
}
@media (max-width: 767px) {
  .detail__button {
    width: 26.8rem;
    height: 26.8rem;
    bottom: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/