/*! For license information please see main.16136a656592bc0646d9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),n=a.n(s),i=a("./app/pages/About/index.js"),o=a("./app/pages/Collections/index.js"),r=a("./app/pages/Detail/index.js"),c=a("./app/pages/Home/index.js"),l=a("./app/components/preloader.js");new class{constructor(){this.createPreloader(),this.createContent(),this.createPages(),this.addLinkListeners()}createPreloader(){this.preloader=new l.default,this.preloader.once("completed",this.onPreloaded.bind(this))}onPreloaded(){this.preloader.detroy()}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template"),console.log(this.template)}createPages(){this.pages={home:new c.default,collections:new o.default,about:new i.default,detail:new r.default},this.page=this.pages[this.template],this.page.create(),this.page.show()}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),a=document.createElement("div");a.innerHTML=e;const s=a.querySelector(".content");this.template=s.getAttribute("data-template"),this.content.setAttribute("data-template",s.getAttribute("data-attribute")),this.content.innerHTML=s.innerHTML,this.page=this.pages[this.template],this.page.create(),this.page.show(),this.addLinkListeners()}else console.log("error")}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:a}=e;this.onChange(a)}}))}}}},(function(e){e.h=()=>"ac79b6206582a3794970"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4xNjEzNmE2NTY1OTJiYzA2NDZkOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7d1RBOEdBLElBdkdBLE1BQ0VBLGNBRUVDLEtBQUtDLGtCQUVMRCxLQUFLRSxnQkFDTEYsS0FBS0csY0FDTEgsS0FBS0ksbUJBR1BILGtCQUNFRCxLQUFLSyxVQUFZLElBQUlDLEVBQUFBLFFBRXJCTixLQUFLSyxVQUFVRSxLQUFLLFlBQWFQLEtBQUtRLFlBQVlDLEtBQUtULE9BR3pEUSxjQUVFUixLQUFLSyxVQUFVSyxTQUlqQlIsZ0JBQ0VGLEtBQUtXLFFBQVVDLFNBQVNDLGNBQWMsWUFDdENiLEtBQUtjLFNBQVdkLEtBQUtXLFFBQVFJLGFBQWEsaUJBQzFDQyxRQUFRQyxJQUFJakIsS0FBS2MsVUFLbkJYLGNBSUVILEtBQUtrQixNQUFRLENBQ1hDLEtBQU0sSUFBSUMsRUFBQUEsUUFDVkMsWUFBYSxJQUFJQyxFQUFBQSxRQUNqQkMsTUFBTyxJQUFJQyxFQUFBQSxRQUNYQyxPQUFRLElBQUlDLEVBQUFBLFNBS2QxQixLQUFLMkIsS0FBTzNCLEtBQUtrQixNQUFNbEIsS0FBS2MsVUFDNUJkLEtBQUsyQixLQUFLQyxTQUNWNUIsS0FBSzJCLEtBQUtFLE9BR0UsZUFBRUMsU0FFUjlCLEtBQUsyQixLQUFLSSxPQUdoQixNQUFNQyxRQUFnQkMsT0FBT0MsTUFBTUosR0FFbkMsR0FBdUIsTUFBbkJFLEVBQVFHLE9BQWdCLENBQzFCLE1BQU1DLFFBQWFKLEVBQVFLLE9BRXJCQyxFQUFNMUIsU0FBUzJCLGNBQWMsT0FDbkNELEVBQUlFLFVBQVlKLEVBRWhCLE1BQU1LLEVBQWFILEVBQUl6QixjQUFjLFlBRXJDYixLQUFLYyxTQUFXMkIsRUFBVzFCLGFBQWEsaUJBR3hDZixLQUFLVyxRQUFRK0IsYUFBYSxnQkFBaUJELEVBQVcxQixhQUFhLG1CQUNuRWYsS0FBS1csUUFBUTZCLFVBQVlDLEVBQVdELFVBR3BDeEMsS0FBSzJCLEtBQU8zQixLQUFLa0IsTUFBTWxCLEtBQUtjLFVBQzVCZCxLQUFLMkIsS0FBS0MsU0FDVjVCLEtBQUsyQixLQUFLRSxPQUdWN0IsS0FBS0ksd0JBSUxZLFFBQVFDLElBQUksU0FJaEJiLG1CQUVFLE1BQU11QyxFQUFRL0IsU0FBU2dDLGlCQUFpQixLQUV4Q0MsR0FBQUEsQ0FBS0YsR0FBT0csSUFDVkEsRUFBS0MsUUFBVUMsSUFFYkEsRUFBTUMsaUJBS04sTUFBTSxLQUFFQyxHQUFTSixFQUVqQjlDLEtBQUttRCxTQUFTRCx3QkN4R3RCRSxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2luZGV4LmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVhY2ggZnJvbSAnbG9kYXNoL2VhY2gnXG5pbXBvcnQgQWJvdXQgZnJvbSAncGFnZXMvQWJvdXQnXG5pbXBvcnQgQ29sbGVjdGlvbnMgZnJvbSAncGFnZXMvQ29sbGVjdGlvbnMnXG5pbXBvcnQgRGV0YWlsIGZyb20gJ3BhZ2VzL0RldGFpbCdcbmltcG9ydCBIb21lIGZyb20gJ3BhZ2VzL0hvbWUnXG5pbXBvcnQgUHJlbG9hZGVyIGZyb20gJ2NvbXBvbmVudHMvcHJlbG9hZGVyJ1xuXG5jbGFzcyBBcHAge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgLy8gIFdlIHB1dCB0aGlzIGxvZyBhdCB0aGUgc3RhcnQgdG8gbWFrZSBzdXJlIGl0J3MgYWN0dWFsbHkgd29ya2luZ1xuICAgIHRoaXMuY3JlYXRlUHJlbG9hZGVyKClcblxuICAgIHRoaXMuY3JlYXRlQ29udGVudCgpXG4gICAgdGhpcy5jcmVhdGVQYWdlcygpXG4gICAgdGhpcy5hZGRMaW5rTGlzdGVuZXJzKClcbiAgfVxuXG4gIGNyZWF0ZVByZWxvYWRlciAoKSB7XG4gICAgdGhpcy5wcmVsb2FkZXIgPSBuZXcgUHJlbG9hZGVyKClcbiAgICAvLyBiaW5kaW5nIGlzIHJlbGF0ZWQgd2l0IHRoZSBjbG9zdXJlIHRoaW5nXG4gICAgdGhpcy5wcmVsb2FkZXIub25jZSgnY29tcGxldGVkJywgdGhpcy5vblByZWxvYWRlZC5iaW5kKHRoaXMpKVxuICB9XG5cbiAgb25QcmVsb2FkZWQgKCkge1xuICAgIC8vIGRlc3Ryb3kgaXQgKGl0b25seSBhZnRlciBpdCdzIGhpZGRlbilcbiAgICB0aGlzLnByZWxvYWRlci5kZXRyb3koKVxuICB9XG5cbiAgLy8gVGhlIGNvbnRlbnQgZWxlbWVudCBhbGxvd3MgdG8gaW5pdGlhbGlzZSBvbmx5IHRoZSBwYWdlIHdlJ3JlIGN1cnJlbnRseSBvblxuICBjcmVhdGVDb250ZW50ICgpIHtcbiAgICB0aGlzLmNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRoaXMuY29udGVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGVtcGxhdGUnKVxuICAgIGNvbnNvbGUubG9nKHRoaXMudGVtcGxhdGUpXG4gICAgLy8gdGhpcyByZXR1cm5zIGEgc3RyaW5nLCB0aGUgbmFtZSBvZiB0aGUgcGFnZVxuICB9XG5cbiAgLy8gRmlyc3RseSB3ZSBuZWVkIHRvIGNyZWF0ZSBuZXcgcGFnZXMgLSB0aGlzIGNhbiBiZSBhIG1hcCBvZiBhbGwgcGFnZXMgd2UncmUgZ29pbmcgdG8gaW5pdGFsaXNlXG4gIGNyZWF0ZVBhZ2VzICgpIHtcbiAgICAvLyB0aGVyZSdzIDIgd2F5cyB0byBkbyBpdCAtIHdlIGNhbiBlaXRoZXIgY3JlYXRlIHRob3NlIGNsYXNzZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3JcbiAgICAvLyBvciBhbm90aGVyIG1ldGhvZCwgd2UgY2FuIGRlc3Ryb3kgdGhlbSBvciBub3QsIHVzdXNhbGx5IGhlIGRvZXNuJ3QgZGVzdHJveSB0aGVtLCBoZSBqdXN0IGNyZWF0ZXMgYWRkIGFuZCByZW1vdmUgbGlzdGVuZXJzXG4gICAgLy8gYmVjYXVzZSBpdCBjYW4gYmUgY29uc3VtaW5nIGZvciB0aGUgYnJvd3NlciBrZWVwaW5nIHRyYWNrIG9mIGRlc3Ryb3lpbmcgYW5kIGNyZWF0aW5nIGNsYXNzZXNcbiAgICB0aGlzLnBhZ2VzID0ge1xuICAgICAgaG9tZTogbmV3IEhvbWUoKSxcbiAgICAgIGNvbGxlY3Rpb25zOiBuZXcgQ29sbGVjdGlvbnMoKSxcbiAgICAgIGFib3V0OiBuZXcgQWJvdXQoKSxcbiAgICAgIGRldGFpbDogbmV3IERldGFpbCgpXG4gICAgfVxuXG4gICAgLy8gTm93IHdlIGdldCB0aGlzIHBhZ2UgKHNvICdob21lJyBvciAnYWJvdXQnIGV0Yy4pIC0gdGhpcyBvbmx5IGluaXRpYWxpc2VzIHRoZSBjbGFzc2VzIHRhaHQgd2UncmUgdXNpbmcuXG4gICAgLy8gVGhpcyBhbGxvd3MgdXMgdG8gY3JlYXRlIG9uZSBwYWdlIGF0IG9uY2UuXG4gICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlc1t0aGlzLnRlbXBsYXRlXVxuICAgIHRoaXMucGFnZS5jcmVhdGUoKVxuICAgIHRoaXMucGFnZS5zaG93KClcbiAgfVxuXG4gIGFzeW5jIG9uQ2hhbmdlICh1cmwpIHtcbiAgICAvLyAxIC0tIGlmIEkgd2FudCB0byBnbyB0byBhbm90aGVyIHBhZ2UsIHRoZSBmaXJzdCB0aGluZyBJIG5lZWQgdG8gZG8gaXMgYW5pbWF0ZSBvdXQgbXkgY3VycmVudCBwYWdlXG4gICAgYXdhaXQgdGhpcy5wYWdlLmhpZGUoKVxuXG4gICAgLy8gMiAtLSBmZXRjaGluZyB0aGUgbmV3IHBhZ2VcbiAgICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgd2luZG93LmZldGNoKHVybClcblxuICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICBjb25zdCBodG1sID0gYXdhaXQgcmVxdWVzdC50ZXh0KClcbiAgICAgIC8vIHdlJ3JlIGNyZWF0aW5nIGEgZmFrZSBkaXYgaGVyZSB0byBhcHBlbmQgdGhlIGh0bWwgb2YgdGhlIHJlcXVlc3RlZCBwYWdlXG4gICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgZGl2LmlubmVySFRNTCA9IGh0bWxcbiAgICAgIC8vIG92ZXJyaWRpbmcgdGhlIGh0bWwgd2l0aCB0aGUgbmV3IHBhZ2UgaHRtbFxuICAgICAgY29uc3QgZGl2Q29udGVudCA9IGRpdi5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXG5cbiAgICAgIHRoaXMudGVtcGxhdGUgPSBkaXZDb250ZW50LmdldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScpXG5cbiAgICAgIC8vIGxldCdzIGFsc28gdXBkYXRlIHRoZSBzbHVnIHRvIHRoZSBuZXcgcGFnZSdzIG9uZVxuICAgICAgdGhpcy5jb250ZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScsIGRpdkNvbnRlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWF0dHJpYnV0ZScpKVxuICAgICAgdGhpcy5jb250ZW50LmlubmVySFRNTCA9IGRpdkNvbnRlbnQuaW5uZXJIVE1MXG5cbiAgICAgIC8vIDMgLS0gZGlzcGxheWluZyBicmFuZCBuZXcgcGFnZVxuICAgICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlc1t0aGlzLnRlbXBsYXRlXVxuICAgICAgdGhpcy5wYWdlLmNyZWF0ZSgpXG4gICAgICB0aGlzLnBhZ2Uuc2hvdygpXG5cbiAgICAgIC8vIHRoaXMgaXMgc28gdGhhdCB3ZSBhbHNvIGxpc3RlbiB0byBldmVudHMgaW4gY29udGVudCBsaW5rcyAtIGxpa2UgdGhlIGJ1dHRvblxuICAgICAgdGhpcy5hZGRMaW5rTGlzdGVuZXJzKClcblxuICAgIC8vICAgY29uc29sZS5sb2coaHRtbClcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ2Vycm9yJylcbiAgICB9XG4gIH1cblxuICBhZGRMaW5rTGlzdGVuZXJzICgpIHtcbiAgICAvLyBUaGlzIG1ldGhvZCB3aWxsIGdvIHRocm91Z2ggYWxsIGxpbmtzIG9uIHRoZSB3ZWJzaXRlICh1c2luZyBsb2Rhc2gpXG4gICAgY29uc3QgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhJylcblxuICAgIGVhY2gobGlua3MsIGxpbmsgPT4ge1xuICAgICAgbGluay5vbmNsaWNrID0gZXZlbnQgPT4ge1xuICAgICAgICAvLyB3ZSBhdm9pZCByZWRpcmVjdGluZyBoZXJlXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICAvLyBJbnN0ZWFkIHdlJ2xsIHVzZSBmZXRjaCBBUEkgdG8gcmVxdWVzdCB0aGUgcGFnZSB3aXRob3V0IGhhdmluZyB0byByZWZyZXNoIHRoZSBwYWdlIGZvciB0aGUgdXNlclxuICAgICAgICAvLyB3ZSBhcmUgZmV0Y2hpbmcgdGhlIHBhZ2Ugd2l0aG91dCBsZWF2aW5nIHRoZSBwcmV2aW91cyBvbmUuXG4gICAgICAgIC8vIFRoaXMgaXMgdGhlIHdheSB0byBpbXBsZW1lbnQgd2hhdCBSZWFjdCBpcyBkb2luZyB3aXRoIEFKQVguXG4gICAgICAgIGNvbnN0IHsgaHJlZiB9ID0gbGlua1xuXG4gICAgICAgIHRoaXMub25DaGFuZ2UoaHJlZilcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG5cbm5ldyBBcHAoKVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiYWM3OWI2MjA2NTgyYTM3OTQ5NzBcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJ0aGlzIiwiY3JlYXRlUHJlbG9hZGVyIiwiY3JlYXRlQ29udGVudCIsImNyZWF0ZVBhZ2VzIiwiYWRkTGlua0xpc3RlbmVycyIsInByZWxvYWRlciIsIlByZWxvYWRlciIsIm9uY2UiLCJvblByZWxvYWRlZCIsImJpbmQiLCJkZXRyb3kiLCJjb250ZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGVtcGxhdGUiLCJnZXRBdHRyaWJ1dGUiLCJjb25zb2xlIiwibG9nIiwicGFnZXMiLCJob21lIiwiSG9tZSIsImNvbGxlY3Rpb25zIiwiQ29sbGVjdGlvbnMiLCJhYm91dCIsIkFib3V0IiwiZGV0YWlsIiwiRGV0YWlsIiwicGFnZSIsImNyZWF0ZSIsInNob3ciLCJ1cmwiLCJoaWRlIiwicmVxdWVzdCIsIndpbmRvdyIsImZldGNoIiwic3RhdHVzIiwiaHRtbCIsInRleHQiLCJkaXYiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiZGl2Q29udGVudCIsInNldEF0dHJpYnV0ZSIsImxpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImVhY2giLCJsaW5rIiwib25jbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJocmVmIiwib25DaGFuZ2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=