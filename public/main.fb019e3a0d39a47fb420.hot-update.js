/*! For license information please see main.fb019e3a0d39a47fb420.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateJS_boilerplate("main",{"./app/index.js":(e,t,o)=>{o.r(t);var n=o("./node_modules/lodash/each.js"),a=o.n(n),i=o("./app/pages/About/index.js"),s=o("./app/pages/Home/index.js");Object(function(){var e=new Error("Cannot find module 'components/preloader'");throw e.code="MODULE_NOT_FOUND",e}()),Object(function(){var e=new Error("Cannot find module 'components/Navigation'");throw e.code="MODULE_NOT_FOUND",e}());new class{constructor(){this.url=window.location.pathname,this.createPreloader(),this.createNavigation(),this.createHome(),this.createAbout(),this.pages={"/":this.home,"/about":this.about},this.page=this.pages[this.url],this.page.show(this.url),this.addEventListeners(),this.addLinkListeners(),this.update()}createPreloader(){console.log("Create preloader"),this.preloader=new Object(function(){var e=new Error("Cannot find module 'components/preloader'");throw e.code="MODULE_NOT_FOUND",e}())({}),this.preloader.once("completed",this.onPreloaded.bind(this))}createNavigation(){console.log("Create nav"),this.navigation=new Object(function(){var e=new Error("Cannot find module 'components/Navigation'");throw e.code="MODULE_NOT_FOUND",e}())({template:this.url})}createAbout(){console.log("Create about"),this.about=new i.default,this.about.create()}createHome(){console.log("Create home"),this.home=new s.default,this.home.create()}onPreloaded(){this.preloader.destroy(),this.onResize(),this.page.show()}async onChange(e=null,t=!0){e=e.replace(window.location.origin,""),await this.page.hide();const o=await window.fetch(e);if(this.url=e,200===o.status){const n=await o.text(),a=document.createElement("div");t&&window.history.pushState({},"",e),a.innerHTML=n;const i=a.querySelector(".content");this.template=i.getAttribute("data-template"),this.navigation.onChange(this.url),this.content.innerHTML=i.innerHTML,this.page=this.pages[this.url],this.page.create(),this.onResize(),this.page.show(),this.addLinkListeners()}else console.log("error")}onResize(){this.page&&this.page.onResize&&this.page.onResize()}update(){this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}addEventListeners(){window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");a()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:o}=e;this.onChange(o)}}))}}},"./app/pages/About/index.js":(e,t,o)=>{o.r(t),o.d(t,{default:()=>n}),Object(function(){var e=new Error("Cannot find module 'classes/Page'");throw e.code="MODULE_NOT_FOUND",e}());class n extends(Object(function(){var e=new Error("Cannot find module 'classes/Page'");throw e.code="MODULE_NOT_FOUND",e}())){constructor(){super({id:"about",element:".about",elements:{wrapper:".about__wrapper",navigation:document.querySelector(".navigation"),title:".about__title"}})}}},"./app/pages/Home/index.js":(e,t,o)=>{o.r(t),o.d(t,{default:()=>n}),Object(function(){var e=new Error("Cannot find module 'classes/Page'");throw e.code="MODULE_NOT_FOUND",e}());class n extends(Object(function(){var e=new Error("Cannot find module 'classes/Page'");throw e.code="MODULE_NOT_FOUND",e}())){constructor(){super({id:"home",element:".home",elements:{wrapper:".home__wrapper",link:".home__link",navigation:document.querySelector(".navigation")}})}}},"./styles/index.scss":(e,t,o)=>{o.r(t);var n=o("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:"",locals:!1});e.hot.dispose(n),e.hot.accept(void 0,n)}},(function(e){e.h=()=>"843934bf96eef547afc8"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,